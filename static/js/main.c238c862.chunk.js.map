{"version":3,"sources":["App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","flexDirection","minHeight","main","marginTop","spacing","marginBottom","mainPaper","alignItems","avatar","margin","backgroundColor","palette","secondary","form","width","submit","footer","padding","type","grey","paper","overflow","fixedHeight","height","clip","React","useState","username","email","tokenId","copied","state","setState","classes","fixedHeightPaper","clsx","className","Container","component","maxWidth","CssBaseline","Avatar","noValidate","clientId","render","renderProps","Button","fullWidth","onClick","disabled","buttonText","onSuccess","response","tt","Ad","$t","cookiePolicy","Grid","item","Paper","gutterBottom","depositContext","text","onCopy","Tooltip","title","placement","IconButton","aria-label","size","fontSize","ReactDOM","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.c238c862.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport Assignment from '@material-ui/icons/Assignment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { GoogleLogin } from 'react-google-login';\n\nconst Copyright = () => {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Created by '}\n      <Link color='inherit' href='https://github.com/mdmundo'>\n        Edmundo Paulino\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  mainPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  clip: {\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(0)\n  }\n}));\n\nexport default () => {\n  const [state, setState] = React.useState({\n    username: 'User Name',\n    email: 'User Email',\n    tokenId: '',\n    copied: false\n  });\n\n  const responseGoogle = (response) => {\n    const username = response.tt.Ad;\n    const email = response.tt.$t;\n    const tokenId = response.tokenId;\n\n    setState({ username, email, tokenId, copied: false });\n  };\n\n  const onCopy = () => {\n    setState({ ...state, copied: true });\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <Container component='main' className={classes.main} maxWidth='xs'>\n        <CssBaseline />\n        <div className={classes.mainPaper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h3'>\n            Login\n          </Typography>\n          <div className={classes.form} noValidate>\n            <GoogleLogin\n              clientId='1024959299157-0olhl16sc1as3k7vrfijvntq6ldhno50.apps.googleusercontent.com'\n              render={(renderProps) => (\n                <Button\n                  type='submit'\n                  fullWidth\n                  variant='contained'\n                  color='primary'\n                  className={classes.submit}\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}>\n                  Login with your Google account\n                </Button>\n              )}\n              buttonText='Login'\n              onSuccess={responseGoogle}\n              cookiePolicy={'single_host_origin'}\n            />\n          </div>\n        </div>\n        <Grid item>\n          <Paper className={fixedHeightPaper}>\n            <Typography\n              component='h2'\n              variant='h6'\n              color='primary'\n              gutterBottom>\n              User Data\n            </Typography>\n            <Typography component='p' variant='h4'>\n              {state.username}\n            </Typography>\n            <Typography\n              color='textSecondary'\n              className={classes.depositContext}>\n              {state.email}\n            </Typography>\n            <div>\n              <CopyToClipboard text={state.tokenId} onCopy={onCopy}>\n                <Tooltip title='Copy Token to Clipboard' placement='right'>\n                  <IconButton\n                    aria-label='clipboard'\n                    color='primary'\n                    className={classes.clip}\n                    size='medium'\n                    disabled={!state.tokenId}>\n                    {state.copied ? (\n                      <AssignmentTurnedInIcon fontSize='large' />\n                    ) : (\n                      <Assignment fontSize='large' />\n                    )}\n                  </IconButton>\n                </Tooltip>\n              </CopyToClipboard>\n            </div>\n            <div></div>\n          </Paper>\n        </Grid>\n      </Container>\n      <footer className={classes.footer}>\n        <Container maxWidth='sm'>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}