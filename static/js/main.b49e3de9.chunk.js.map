{"version":3,"sources":["App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","flexDirection","minHeight","main","marginTop","spacing","marginBottom","login","alignItems","avatar","margin","backgroundColor","palette","secondary","form","width","submit","footer","padding","type","grey","paper","overflow","fixedHeight","height","clip","App","useState","username","email","tokenId","thumbnail","copied","state","setState","classes","className","Container","component","maxWidth","CssBaseline","Avatar","src","noValidate","clientId","render","renderProps","Button","fullWidth","onClick","disabled","buttonText","onSuccess","response","profileObj","name","imageUrl","cookiePolicy","Grid","item","Paper","gutterBottom","depositContext","text","onCopy","Tooltip","title","placement","IconButton","aria-label","size","fontSize","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b49e3de9.chunk.js","sourcesContent":["import { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { GoogleLogin } from 'react-google-login';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Assignment from '@material-ui/icons/Assignment';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst Copyright = () => {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Created by '}\n      <Link color='inherit' href='https://github.com/mdmundo'>\n        Edmundo Paulino\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  login: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  clip: {\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(0)\n  }\n}));\n\nconst App = () => {\n  const [state, setState] = useState({\n    username: 'User Name',\n    email: 'User Email',\n    tokenId: '',\n    thumbnail: '',\n    copied: false\n  });\n\n  const responseGoogle = (response) => {\n    const username = response.profileObj.name;\n    const email = response.profileObj.email;\n    const tokenId = response.tokenId;\n    const thumbnail = response.profileObj.imageUrl;\n\n    setState({ username, email, tokenId, thumbnail, copied: false });\n  };\n\n  const onCopy = () => {\n    setState({ ...state, copied: true });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container component='main' className={classes.main} maxWidth='xs'>\n        <CssBaseline />\n        <div className={classes.login}>\n          {state.thumbnail ? (\n            <Avatar src={state.thumbnail} className={classes.avatar} />\n          ) : (\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n          )}\n          <Typography component='h1' variant='h3'>\n            Login\n          </Typography>\n          <div className={classes.form} noValidate>\n            <GoogleLogin\n              clientId='1024959299157-0olhl16sc1as3k7vrfijvntq6ldhno50.apps.googleusercontent.com'\n              render={(renderProps) => (\n                <Button\n                  type='submit'\n                  fullWidth\n                  variant='contained'\n                  color='primary'\n                  className={classes.submit}\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}>\n                  Login with your Google account\n                </Button>\n              )}\n              buttonText='Login'\n              onSuccess={responseGoogle}\n              cookiePolicy={'single_host_origin'}\n            />\n          </div>\n        </div>\n        <Grid item>\n          <Paper className={classes.paper}>\n            <Typography\n              component='h2'\n              variant='h6'\n              color='primary'\n              gutterBottom>\n              User Data\n            </Typography>\n            <Typography component='p' variant='h4'>\n              {state.username}\n            </Typography>\n            <Typography\n              color='textSecondary'\n              className={classes.depositContext}>\n              {state.email}\n            </Typography>\n            <div>\n              <CopyToClipboard text={state.tokenId} onCopy={onCopy}>\n                <Tooltip title='Copy Token to Clipboard' placement='right'>\n                  <IconButton\n                    aria-label='clipboard'\n                    color='primary'\n                    className={classes.clip}\n                    size='medium'\n                    disabled={!state.tokenId}>\n                    {state.copied ? (\n                      <AssignmentTurnedInIcon fontSize='large' />\n                    ) : (\n                      <Assignment fontSize='large' />\n                    )}\n                  </IconButton>\n                </Tooltip>\n              </CopyToClipboard>\n            </div>\n          </Paper>\n        </Grid>\n      </Container>\n      <footer className={classes.footer}>\n        <Container maxWidth='sm'>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n};\n\nexport { App as default };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}